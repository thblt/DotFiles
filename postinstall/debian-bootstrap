#!/bin/sh

pkg_add() {
    packages="$packages $@"
}

pkg_remove() {
    removed_packages="$removed_packages $@"
}

enforce_root() {
    if [ "$(id -u)" != "0" ]; then
        echo "This command must be run as root" 1>&2
        exit 1
    fi
}

mk_apt_norecommands() {
    # Disable auto install of suggested/recommended packages, and allow their autoremoval
    echo 'APT::Install-Recommends "false";'              > /etc/apt/apt.conf.d/99_norecommends
    echo 'APT::AutoRemove::RecommendsImportant "false";' >> /etc/apt/apt.conf.d/99_norecommends
    echo 'APT::AutoRemove::SuggestsImportant "false";'   >> /etc/apt/apt.conf.d/99_norecommends
}

fix_xsession_options() {
    sed -i "s/^\\(use-ssh-agent\\)$/# \\1/" /etc/X11/Xsession.options
}

global_upgrade() {
    apt update
    apt autoremove
    apt dist-upgrade
}

mk_persistent_journal() {
    sudo mkdir -p /var/log/journal
    sudo systemd-tmpfiles --create --prefix /var/log/journal
}

store_installed_packages(){
    # List installed packages
    pkglistfile=/usr/local/share/base-packages.list
    if [ ! -f $pkglistfile ]; then
        apt-mark showmanual > $pkglistfile
    fi
}

build_package_list() {
    # Kernel headers
    pkg_add linux-headers-amd64 # FIXME Don't hardcode machine type
    # Drivers and hardware
    pkg_add efivar firmware-linux-free firmware-linux-nonfree smartmontools
    # Misc system utilities
    pkg_add file info less man-db powertop psmisc rename sudo time wipe
    # Networking fundamentals
    pkg_add ca-certificates curl dnsutils lynx rsync telnet wget whois
    # Debian/APT utilities
    pkg_add apt-file aptitude debian-keyring netselect-apt
    #                     ^ Need this to verify release ISOs
    # Shell and terminal multiplexing
    pkg_add fish tmux tmux-plugin-manager zsh
    #   ^ Better out of the box than zsh, cool for root or new users.
    # Compression
    pkg_add unrar zip unzip
    # Misc
    pkg_add policykit-1 # Everything needs this.

    ###############################################################
    # At this point, the base system is usable interactively.     #
    # Need to run this in a server? Wrap everything below in a if #
    ###############################################################

    #
    # Base programming
    # Diff tools are in desktop tools
    #

    # General programming tools (language-specific build systems are with their language)
    pkg_add autoconf automake cmake exuberant-ctags git gpp texinfo
    # Debian-specific
    pkg_add build-essential checkinstall
    # Debuggers (language-specific debuggers are with their language.)
    pkg_add gdb lldb
    # C-family
    pkg_add clang clang-format
    # Go
    pkg_add golang
    # Haskell
    pkg_add cabal-install haskell-stack ghc ghc-mod hlint stylish-haskell
    # Java (?)
    pkg_add openjdk-8-jdk
    # Javascript
    pkg_add nodejs
    # Python
    pkg_add python-setuptools python3-setuptools python-pip python python3 virtualenvwrapper
    # Rust
    # Use rustup for now
    pkg_remove cargo rustc
    # Shell
    pkg_add shellcheck
    # Some deps
    pkg_add libclang-dev sqlite3
    #                ^ for helm-dash/counsel-dash
    #   ^ for emacs irony-mode (also needs cmake)

    #
    # Desktop environment
    #

    # Tools for computers with an attached keyboard and screen
    pkg_add fbset
    # Filesystems (exfat is pointless outside the desktop)
    pkg_add exfat-fuse exfat-utils

    # Xorg
    pkg_add xserver-xorg-core xserver-xorg-input-libinput x11-xserver-utils \
            mesa-utils mesa-va-drivers mesa-vdpau-drivers \
            libgl1-mesa-dri

    pkg_add xfonts-base # XMonad decorations fail without this.
    pkg_add gnome-themes-standard gtk2-engines-pixbuf # pixbuf required for Adwaita on GTK2 apps
    pkg_add desktop-base # Wallpaper and Plymouth themes
    # Window and compositing manager
    pkg_remove xmonad libghc-xmonad-contrib-dev libghc-xmonad-contrib-doc libghc-dbus-dev
    pkg_add libxft-dev libxinerama-dev libxrandr-dev # XMonad libraries
    pkg_add compton
    # Display manager & session locker
    pkg_add lightdm-gtk-greeter light-locker
    pkg_add policykit-1 # LightDM depends on this to handle shutdown/reboot/etc
    pkg_remove nodm slock
    # Dbus
    pkg_add dbus-x11
    # Notification system
    pkg_add dunst libnotify-bin gir1.2-notify-0.7
    #                       ^ Introspection data.  At least Udiskie requires this.
    # Audio
    pkg_add alsa-utils

    # Printing
    pkg_add cups
    pkg_add printer-driver-brlaser
    pkg_add ghostscript # Also required by djvu2pdf.  Probably installed automatically
    # add printer-driver-splix # For the Samsung - doesn't work

    # Misc desktop utilities
    pkg_add arandr feh libinput-tools scrot suckless-tools \
            udiskie wmctrl xclip xinput xsel zenity
    pkg_remove synapse
    # Font manager and fonts
    pkg_add font-manager fonts-dejavu fonts-noto fonts-noto-cjk fonts-roboto fonts-symbola

    #
    # Desktop (not necessarily X) tools
    #

    # Terminal emulator
    pkg_add rxvt-unicode-256color
    # Browsers
    pkg_add chromium chromium-l10n firefox-esr firefox-esr-l10n-fr torbrowser-launcher
    pkg_add pulseaudio # Mozilla-released Firefox depends on this for audio playback
    # Text editors (with CLI versions as well)
    pkg_remove vim-gtk
    pkg_add emacs25 vim vim-gtk3
    # These are the dependencies of Emacs pdf-tools
    pkg_add imagemagick libpng-dev libpoppler-glib-dev libpoppler-private-dev zlib1g-dev
    # And the Emacs non-free documentation
    pkg_add emacs25-common-non-dfsg
    # I don't use emacs 24 anymore
    pkg_remove emacs24
    # Text editing tools
    pkg_add meld
    # Spell checking
    pkg_add aspell aspell-fr
    # Email client
    pkg_add maildir-utils mu4e isync
    # File managers
    pkg_add mc pcmanfm
    # Media player
    pkg_add vlc
    # Crypto
    pkg_add gpa openssh-client paperkey pass
    pkg_remove keychain
    # Bad office suite
    pkg_add libreoffice-calc libreoffice-writer libreoffice-gtk3 libreoffice-l10n-fr
    # The texlive monster and tex utilities
    pkg_add texlive-base texlive-lang-french texlive-xetex lmodern lyx
    #                                                  ^ not part of the base distribution.
    pkg_add biber texlive-bibtex-extra
    pkg_add dvipng texlive-fonts-recommended texlive-generic-recommended
    #   ^ These three are required for org-toggle-latex-fragment

    # Handling misc formats
    pkg_add djvulibre-bin # Required (with ghostscript) for .bin/djvu2pdf
    # Misc
    pkg_add barcode qrencode zbar-tools
    pkg_add pandoc
    pkg_add qalculate-gtk
    pkg_add transmission

    case `hostname` in
        "anna")
            >&2 echo "I'm running on Anna."
            pkg_add acpi acpid
            pkg_add network-manager rfkill # TODO move to a "laptop" group
            pkg_add plymouth # Because keyboard is broken
            pkg_add task-laptop # Should have been installed automatically
            pkg_add xserver-xorg-video-intel
            pkg_add firmware-brcm80211 # Wifi
            # TODO apt suggests for powertop: cpufrequtils laptop-mode-tools
            ;;
    "rudiger")
        >&2 echo "I'm running on Rudiger."
        pkg_add xfce4
        pkg_add numlockx
        pkg_add virtualbox-5.1
        pkg_add xserver-xorg-video-radeon
        ;;
    "wednesday")
        >&2 echo "I'm running on Wednesday."
        pkg_add xserver-xorg-video-nouveau
        pkg_add acpid
        pkg_add network-manager rfkill
        pkg_add task-laptop # Should have been installed automatically
        pkg_add firmware-brcm80211 # Wifi
        ;;
    "maladict")
        >&2 echo "I'm running on Maladict."
        pkg_add acpi acpid acpi-call-dkms
        pkg_add network-manager rfkill
        pkg_remove plymouth plymouth-themes
        pkg_add task-laptop tlp
        pkg_add virtualbox-5.1
        ;;
    *)
        >&2 echo "Unknown machine, aborting."
        exit 1
    esac
}

show_package_list() {
    echo
    echo "I'm about to install"
    echo "--------------------"
    echo
    echo $packages
    echo
    echo "I'm about to mark as automatically installed"
    echo "--------------------------------------------"
    echo $removed_packages
    echo
    echo "Please review the FULL output above and press enter"
    echo "to proceed or C-c to abort."
    read dummy
}

execute_package_list(){
    apt-mark auto $removed_packages
    apt autoremove --purge
    apt install $packages
}

fix_groups() {
    # Fix groups for target user
    usermod -aG sudo,adm,systemd-journal $target_user
}

target_user=`id -nu 1000`

case $1 in
    "bootstrap")
        enforce_root
        mk_apt_norecommands
        mk_persistent_journal
        global_upgrade
        store_installed_packages
        build_package_list
        execute_package_list
		    fix_groups
        fix_xsession_options
        ;;
    "list")
        build_package_list
        echo $packages | tr " " "\n" | sort -u
        exit 0
        ;;
    "install")
        enforce_root
        build_package_list
        execute_package_list
        ;;
    *)
        >&2 echo "What do you want me to do?"
        exit 1
        ;;
esac
