#+TITLE: thblt's dotfiles

Hi!  These are my [[https://en.wikipedia.org/wiki/Dot-file][dotfiles]].  They're messy and disorganized but may contain some little things of interest, hence this README.

* Contents :TOC:
- [[#xmonad][XMonad]]
- [[#tmux-and-zsh][Tmux and ZSH]]
- [[#emacs-and-other-editors][Emacs (and other editors)]]
- [[#debian][Debian]]
- [[#git][Git]]
- [[#meta-aka-dotfiles-management][Meta (aka dotfiles management)]]

* XMonad

My XMonad configuration is like every other.  Yet, I'm quite happy of:

 - Compile-time per-machine configuration :: Some bits of TemplateHaskell in xmonad.hs bind the current hostname to a variable and allows the configuration to vary depending on the machine it gets compiled on.  I mostly use it to handle keyboard layout differences, but it may be useful for some other things.

 - =.xmonad/quit-xmonad.sh= :: a small and reasonably ugly script which makes use of wmctrl to nicely close all open windows in all workspaces /before/ killing its parent process (/ie/, xmonad).  This is much better than the default method (kill the WM directly, thus aggressively destroy all child processes)

 - =.xmonad/recompile-xmonad.sh= :: Sends a notification when XMonad successfully restarted.  Nice for testing new things.

 - =.xmonad/lib/XMonad/Layout/IfMax.hs= :: A modified version of IfMax which doesn't break with decorations.  I'm not the author, it comes from GitHub user f1u77y on [[https://github.com/xmonad/xmonad-contrib/issues/75][this xmonad-contrib issue]].

Some bits may even be useful with different tiling window managers:

 - =.bin/dmenu-desktop= :: is a modified version of i3's =i3-dmenu-desktop= launcher which makes it independent of i3.  Unlike =dmenu-run=, it doesn't present a list of binaries, but of =.desktop= files, which is nicer.  For terminal apps, it requires =x-terminal-emulator= to be in path, and is thus limited to Debian.

 - =~/.xsessionrc= :: People who never used a tiling WM without a desktop environment may find this a good starting point.  Or perhaps they'll hate it.

* Tmux and ZSH

My Tmux/ZSH config looks like this.  If you like what you see, steal it:

#+CAPTION: Tmux + ZSH config
#+NAME:    tmux_zsh
[[https://cloud.githubusercontent.com/assets/2453136/22307942/47a5b060-e345-11e6-937f-dbd7eb721bf0.png]]

Also:

 - =.xmonad/tmux-attach-or-new= :: is a one-line script which either attaches tmux to an existing session, or creates it.  I use it in combination with the Scratchpad XMonad plugin.

* Emacs (and other editors)

Beyond the literate-style configuration (=.emacs.d/dotemacs.org=, which, like everyone's config, is obviously the best possible Emacs configuration ever), not much to see, except maybe:

 - =./.xmonad/emacsclient-with-feedback= :: A simple launcher script which either creates a new Emacs frame, starting the daemon if needed.  But there's a cool trick:  the daemon is started in a urxvt frame, giving the user (yours, truly) feedback of the startup process.  This is /much better/ than waiting without knowing if a frame is about to appear or if the daemon startup crashed.  And of course, the frame disappears as soon as the daemon is started.  The weird title is meant to have it gets floated automatically by XMonad, which doesn't seem to understand =-name=.

 - =.bin/wmake= :: (whatever-make) is a little script which basically tries to to find something that looks like build instructions, starting at =pwd= and recursing back.  If it finds something, it runs the appropriate build tool.  =wmake= may be a sane default value for your favorite's editor =compile-command= setting.

                   It is sadly unfinished, and could be greatly improved.  For the moment, it doesn't even support all the compile systems I use.

* Debian

My notes on how to install a minimal Debian are somewhere around, but for that you'd better read [[https://thb.lt/blog/drafts/2017/minimal-debian.html][my writeup on my site]], which is cleaner and more general (that is, not steps to reproduce /my/ exact setup)  Beyond that,

 - =.bin/debian_base_install.sh= :: nothing fancy, just a script to install some packages.  A good way to

   1. quickly bootstrap a new machine.

   2. keep track of what's installed:  the script can spit out what it's supposed to install, which can then be compared with the actual list of packages.  The function which does that is the =apt-what-have-i-installed= alias in =.zshrc=.  It requires a list of standard packages which I generate just after installation (it basically displays packages which are (manually installed but not in (=debian_base_install.sh --list= or in initial package list)

* Git

 - =.bin/cig= :: an ugly python script which reads a little of local repositories from either argv or =~/.cig=, updates all remotes (not even asynchronously!), and outputs a global summary:

                 #+begin_example
╭────────────────────────────────────┬────────┬─────────────────────┬──────────────╮
│ ~/.dotfiles                        │ master │ New                 │ Ahead        │
├────────────────────────────────────┼────────┼─────────────────────┼──────────────┤
│ ~/Documents/Enseignement           │ master │                     │              │
├────────────────────────────────────┼────────┼─────────────────────┼──────────────┤
│ ~/Documents/Philo                  │ master │                     │              │
├────────────────────────────────────┼────────┼─────────────────────┼──────────────┤
│ ~/Documents/Code/eziam-theme-emacs │ dev    │                     │              │
├────────────────────────────────────┼────────┼─────────────────────┼──────────────┤
│ ~/Documents/Code/Docoptc           │ master │                     │              │
├────────────────────────────────────┼────────┼─────────────────────┼──────────────┤
│ ~/Documents/Thb.lt                 │ master │                     │              │
├────────────────────────────────────┼────────┼─────────────────────┼──────────────┤
│ ~/.dotfiles.private                │ master │                     │              │
╰────────────────────────────────────┴────────┴─────────────────────┴──────────────╯
                 #+end_example

                 It is abandoned, since I discovered that [[https://magit.vc/][Magit]] did the exact same thing (=M-x magit-list-repositories=)

* Meta (aka dotfiles management)

 - =.bin/symlink_dotfiles.sh= :: is the script I use to, guess what, symlink my dotfiles.
