#!/usr/bin/env python

import operator, os, socket, sys

do_set = lambda x, y: y
do_increase = lambda x, y: x + y
do_decrease = lambda x, y: x - y

# Find the path
hostname = socket.gethostname()
if "anna" == hostname:
   paths = {
      "keyboard": "/sys/devices/platform/applesmc.768/leds/smc::kbd_backlight",
      "monitor": "/sys/devices/pci0000:00/0000:00:02.0/backlight/acpi_video0",
   }
elif "maladict" == hostname:
   paths = {
      "monitor": "/sys/class/backlight/intel_backlight"
   }

if len(sys.argv) != 3:
   print("Usage: {0} object setting".format(sys.argv[0]))
   print("Available objects are: {0}".format(", ".join(paths.keys())))
   print("Setting be like +10, -5, 35, 12%, =3%, =19, 5%, +25%")
   exit(-1)

if not sys.argv[1] in paths.keys():
   print("This machine doesn't provide this object.")
   print("Available objects are: {0}".format(", ".join(paths.keys())))
   exit(-1)

path = paths[sys.argv[1]]
value = sys.argv[2]

# Get max_brightness:
with open(os.path.join(path, "max_brightness"), "r") as mbf:
   max_brightness = int(mbf.read())

# And current brightness
with open(os.path.join(path, "brightness"), "r") as mbf:
   brightness = int(mbf.read())

# Find what to do

op = do_set

if value.startswith("+"):
   op = do_increase
   value = value[1:]
elif value.startswith("-"):
   op = do_decrease
   value = value[1:]
elif value.startswith("="):
   value = value[1:]

# Compute percentage

if value.endswith("%"):
   value = max(1, int(int(value[:-1]) * (float(max_brightness)/100)))
else:
   value = int(value)

# Write
new_brightness = str(min(max_brightness, op(brightness, value)))
with open(os.path.join(path, "brightness"), "w") as b:
   b.write(new_brightness)

print("{2}/{1} (was {0})".format(brightness, max_brightness, new_brightness))
